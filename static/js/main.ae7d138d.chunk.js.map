{"version":3,"sources":["components/Nav.js","components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","libraryStatus","setLibraryStatus","onClick","icon","faMusic","Song","currentSong","className","alt","name","src","cover","artist","Player","audioRef","isPlaying","songInfo","songs","setCurrentSong","setIsPlaying","setSongInfo","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song_data","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","song","length","current","play","getTime","time","Math","floor","slice","trackAnim","transform","animationPercentage","currentTime","style","background","color","type","value","min","max","duration","onChange","e","target","size","faAngleLeft","pause","faPause","faPlay","faAngleRight","LibrarySong","songSelectHandler","Library","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae7d138d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>Library<FontAwesomeIcon icon={faMusic} /></button>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\n\r\nconst Song = ({currentSong}) => {\r\n    return(\r\n        <div className=\"song\">\r\n            <img alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlay, faPause, faAngleLeft, faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({audioRef, currentSong, isPlaying, songInfo, songs, setCurrentSong, setIsPlaying, setSongInfo, setSongs}) => {\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        //Handle song active state\r\n        const newSongs = songs.map((song_data) => {\r\n            if(song_data.id === nextPrev.id){\r\n                return {\r\n                    ...song_data,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song_data,\r\n                    active: false\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    };\r\n    //Handle play and pause button\r\n    const playSongHandler = () => {\r\n        isPlaying ? audioRef.current.pause() : audioRef.current.play();\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n    //Update song timeStamp based on range input\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value\r\n        setSongInfo({\r\n            ...songInfo,\r\n            currentTime: e.target.value\r\n        });\r\n    };\r\n    //Handle track skip function\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if(direction === \"next\"){\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if(direction === \"previous\"){\r\n            if((currentIndex - 1) === -1){\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if(isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[currentIndex - 1]);\r\n            activeLibraryHandler(songs[currentIndex - 1]);\r\n        }\r\n        if(isPlaying) audioRef.current.play();\r\n    };\r\n    //Return formated time \r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\"+ Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n    //Animation handler\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div className=\"track\" style={{background: `linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]})`}}>\r\n                    <input type=\"range\" value={songInfo.currentTime} min={0} max={songInfo.duration || 0} onChange={dragHandler}/>\r\n                    <div className=\"animate-track\" style={trackAnim}></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler(\"previous\")} className=\"skip-back\" size=\"2x\" icon={faAngleLeft}/>\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler(\"next\")} className=\"skip-forward\" size=\"2x\" icon={faAngleRight}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","import React from 'react';\r\n\r\nconst LibrarySong = ({song, songs, isPlaying, setCurrentSong, setSongs, audioRef}) => {\r\n\r\n    const songSelectHandler = async () => {\r\n        //Song selection\r\n        await setCurrentSong(song);\r\n        //Handle song active state\r\n        const newSongs = songs.map((song_data) => {\r\n            if(song_data.id === song.id){\r\n                return {\r\n                    ...song_data,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song_data,\r\n                    active: false\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n        if(isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from 'react';\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({songs, isPlaying, audioRef, libraryStatus, setCurrentSong, setSongs}) => {\r\n    return(\r\n        <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) => (\r\n                <LibrarySong song={song} songs={songs} key={song.id} isPlaying={isPlaying} setCurrentSong={setCurrentSong} setSongs={setSongs} audioRef={audioRef}/>\r\n                ))};\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n        name: \"Sodium\",\r\n        artist: \"Philanthrope, Tesk\",\r\n        cover: \"https://chillhop.com/wp-content/uploads/2020/10/efaa848553d09b4d9fc0752844456e41b34de276-1024x1024.jpg\",\r\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=9149\",\r\n        id: uuidv4(),\r\n        active: false,\r\n        color: [\"#435078\",\"#b0ebf9\"]\r\n    }\r\n    ,\r\n    {\r\n        name: \"Lax Incense\",\r\n        artist: \"Mama Aiuto, Daphné\",\r\n        cover: \"https://chillhop.com/wp-content/uploads/2021/01/6b1bb8736ee3e972747bc11f312e31cf7f5823e4-1024x1024.jpg\",\r\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=12125\",\r\n        id: uuidv4(),\r\n        active: false,\r\n        color: [\"#e4e8eb\",\"#d2926f\"]\r\n    }\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React, { useRef, useState } from 'react';\r\n\r\nimport \"./styles/app.scss\";\r\nimport Nav from \"./components/Nav\";\r\nimport Song from './components/Song';\r\nimport Player from \"./components/Player\";\r\nimport Library from \"./components/Library\";\r\n\r\nimport data from './data';\r\n\r\nfunction App() {\r\n  //Reference html audio tag\r\n  const audioRef = useRef(null);\r\n  //State storage\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n\r\n  //Handle Songs time indicator\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    //Calculate progress percentage\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animationPercentage = Math.round((roundedCurrent / roundedDuration) * 100);\r\n    setSongInfo({\r\n        ...songInfo,\r\n        currentTime: current,\r\n        duration,\r\n        animationPercentage\r\n    });\r\n  };\r\n  //Auto play function\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    if(isPlaying) audioRef.current.play();\r\n  }\r\n\r\n  return (\r\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\r\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\r\n      <Song currentSong={currentSong}/>\r\n      <Player \r\n      audioRef={audioRef} \r\n      songInfo={songInfo} \r\n      setSongInfo={setSongInfo} \r\n      songs={songs}\r\n      setSongs={setSongs}\r\n      isPlaying={isPlaying} \r\n      setIsPlaying={setIsPlaying} \r\n      currentSong={currentSong}\r\n      setCurrentSong={setCurrentSong}/>\r\n      <Library \r\n      audioRef={audioRef} \r\n      currentSong={currentSong} \r\n      songs={songs} \r\n      setSongs={setSongs} \r\n      setCurrentSong={setCurrentSong} \r\n      isPlaying={isPlaying}\r\n      libraryStatus={libraryStatus} />\r\n      <audio \r\n      onLoadedMetadata={timeUpdateHandler} \r\n      onTimeUpdate={timeUpdateHandler} \r\n      ref={audioRef} \r\n      src={currentSong.audio}\r\n      onEnded={songEndHandler}></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}